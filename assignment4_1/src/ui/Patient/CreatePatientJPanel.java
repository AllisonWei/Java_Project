/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package ui.Patient;

import data.AppData;
import java.awt.CardLayout;
import java.util.ArrayList;
import java.util.List;
import javax.swing.JOptionPane;
import model.City;
import model.Community;
import model.House;
import model.Patient;
import model.Person;
import ui.Encounter.EncounterHistoryJPanel;
import ui.Encounter.EncounterJPanel;

/**
 *
 * @author Lynn Wei
 */
public class CreatePatientJPanel extends javax.swing.JPanel {
  private javax.swing.JPanel userProcessContainer;
    /**
     * Creates new form DetailJPanel
     */
    public CreatePatientJPanel(javax.swing.JPanel userProcessContainer) {
        this.userProcessContainer=userProcessContainer;
        initComponents();
        initDate();
    }
    
    //初始化数据
    public void initDate(){
         
        List<City> cityList=AppData.getCityList();
        List<String> cityStrs=new ArrayList<String>();
        for(City c:cityList){
            cityStrs.add(c.getCityName());
        }
        txtCity.setModel(new javax.swing.DefaultComboBoxModel<>(cityStrs.toArray(new String[0])));
        
        
        List<String> communityStrs=initCommunity(cityStrs.get(0));
        List<String> houseStrs= initHouse(cityStrs.get(0),communityStrs.get(0));
        List<String> personStrs= initPerson(cityStrs.get(0),communityStrs.get(0),houseStrs.get(0));
        initPersonInfo(cityStrs.get(0),communityStrs.get(0),houseStrs.get(0),personStrs.get(0));
        
    }
    
    //获取社区下拉
    public List<String> initCommunity(String str){
        List<Community> list=AppData.getCommunityList();
        List<String> listStrs=new ArrayList<String>();
        for(Community c:list){
            if(c.getCityName().equals(str)){
                listStrs.add(c.getCommunityName());
            }
        }
        txtCommunity.setModel(new javax.swing.DefaultComboBoxModel<>(listStrs.toArray(new String[0])));
        return listStrs;
    }
    //获取房子下拉
    public List<String> initHouse(String str1,String str2){
    List<House> list=AppData.getHouseList();
        List<String> listStrs=new ArrayList<String>();
        for(House c:list){
            if(c.getCityName().equals(str1)&&c.getCommunityName().equals(str2)){
                listStrs.add(c.getHouseName());
            }
        }
        txtHouse.setModel(new javax.swing.DefaultComboBoxModel<>(listStrs.toArray(new String[0])));
        return listStrs;
    }
    //获取人员下拉
    public List<String> initPerson(String str1,String str2,String str3){
    List<Person> list=AppData.getPersonList();
        List<String> listStrs=new ArrayList<String>();
        for(Person c:list){
            if(c.getCityName().equals(str1)&&c.getCommunityName().equals(str2)&&c.getHouseName().equals(str3)){
                listStrs.add(c.getName());
            }
        }
        txtPerson.setModel(new javax.swing.DefaultComboBoxModel<>(listStrs.toArray(new String[0])));
         return listStrs;
    }
    
    //填充人员数据
    public void initPersonInfo(String str1,String str2,String str3,String str4){
    List<Person> list=AppData.getPersonList();
        for(Person c:list){
            if(c.getCityName().equals(str1)&&c.getCommunityName().equals(str2)&&c.getName().equals(str4)){
                txtID.setText(c.getID());
                txtGender.setText(c.getGender());
                txtAge.setText(c.getAge()+"");
            }
        }
        
        System.out.print(AppData.getPerson(str1, str2, str3, str4).toString());
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        lblTitle = new javax.swing.JLabel();
        lblAge = new javax.swing.JLabel();
        txtAge = new javax.swing.JTextField();
        lblID = new javax.swing.JLabel();
        lblName = new javax.swing.JLabel();
        lblGender = new javax.swing.JLabel();
        txtID = new javax.swing.JTextField();
        txtGender = new javax.swing.JTextField();
        lblCommunity = new javax.swing.JLabel();
        lblHouse = new javax.swing.JLabel();
        lblCity = new javax.swing.JLabel();
        btnBack = new javax.swing.JButton();
        btnAdd = new javax.swing.JButton();
        btnHistory = new javax.swing.JButton();
        btnAdd1 = new javax.swing.JButton();
        txtCity = new javax.swing.JComboBox<>();
        txtCommunity = new javax.swing.JComboBox<>();
        txtHouse = new javax.swing.JComboBox<>();
        txtPerson = new javax.swing.JComboBox<>();

        lblTitle.setFont(new java.awt.Font("Yu Gothic UI Semibold", 0, 36)); // NOI18N
        lblTitle.setText(" Patient Information");

        lblAge.setText("Age:");

        txtAge.setEditable(false);

        lblID.setText("ID:");

        lblName.setText("Name:");

        lblGender.setText("Gender:");

        txtID.setEditable(false);
        txtID.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtIDActionPerformed(evt);
            }
        });

        txtGender.setEditable(false);

        lblCommunity.setText("Community:");

        lblHouse.setText("House:");

        lblCity.setText("City:");

        btnBack.setText(">>Back");
        btnBack.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnBackActionPerformed(evt);
            }
        });

        btnAdd.setText("ADD ENCOUNTER");
        btnAdd.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnAddActionPerformed(evt);
            }
        });

        btnHistory.setText(" ENCOUNTER HISTORY");
        btnHistory.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnHistoryActionPerformed(evt);
            }
        });

        btnAdd1.setText("Add");
        btnAdd1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnAdd1ActionPerformed(evt);
            }
        });

        txtCity.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Item 1", "Item 2", "Item 3", "Item 4" }));
        txtCity.addItemListener(new java.awt.event.ItemListener() {
            public void itemStateChanged(java.awt.event.ItemEvent evt) {
                txtCityItemStateChanged(evt);
            }
        });

        txtCommunity.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Item 1", "Item 2", "Item 3", "Item 4" }));
        txtCommunity.addItemListener(new java.awt.event.ItemListener() {
            public void itemStateChanged(java.awt.event.ItemEvent evt) {
                txtCommunityItemStateChanged(evt);
            }
        });

        txtHouse.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Item 1", "Item 2", "Item 3", "Item 4" }));
        txtHouse.addItemListener(new java.awt.event.ItemListener() {
            public void itemStateChanged(java.awt.event.ItemEvent evt) {
                txtHouseItemStateChanged(evt);
            }
        });

        txtPerson.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Item 1", "Item 2", "Item 3", "Item 4" }));
        txtPerson.addItemListener(new java.awt.event.ItemListener() {
            public void itemStateChanged(java.awt.event.ItemEvent evt) {
                txtPersonItemStateChanged(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(77, 77, 77)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(lblCity, javax.swing.GroupLayout.PREFERRED_SIZE, 67, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(lblCommunity)
                            .addComponent(lblHouse, javax.swing.GroupLayout.PREFERRED_SIZE, 67, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(31, 31, 31)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(txtCity, 0, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(txtCommunity, 0, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(txtHouse, javax.swing.GroupLayout.PREFERRED_SIZE, 136, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(0, 0, Short.MAX_VALUE))
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(btnAdd1, javax.swing.GroupLayout.PREFERRED_SIZE, 166, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(93, 93, 93)
                        .addComponent(btnAdd, javax.swing.GroupLayout.PREFERRED_SIZE, 185, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 100, Short.MAX_VALUE)
                        .addComponent(btnHistory)
                        .addGap(138, 138, 138))))
            .addGroup(layout.createSequentialGroup()
                .addGap(43, 43, 43)
                .addComponent(btnBack, javax.swing.GroupLayout.PREFERRED_SIZE, 138, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(62, 62, 62)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(285, 285, 285)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addComponent(lblName, javax.swing.GroupLayout.PREFERRED_SIZE, 67, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(lblID, javax.swing.GroupLayout.PREFERRED_SIZE, 67, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(lblGender, javax.swing.GroupLayout.PREFERRED_SIZE, 67, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(lblAge, javax.swing.GroupLayout.PREFERRED_SIZE, 67, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(txtID, javax.swing.GroupLayout.DEFAULT_SIZE, 186, Short.MAX_VALUE)
                            .addComponent(txtGender, javax.swing.GroupLayout.DEFAULT_SIZE, 186, Short.MAX_VALUE)
                            .addComponent(txtAge, javax.swing.GroupLayout.DEFAULT_SIZE, 186, Short.MAX_VALUE)
                            .addComponent(txtPerson, 0, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)))
                    .addComponent(lblTitle, javax.swing.GroupLayout.PREFERRED_SIZE, 341, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(lblTitle, javax.swing.GroupLayout.PREFERRED_SIZE, 82, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(btnBack, javax.swing.GroupLayout.PREFERRED_SIZE, 47, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(lblCity)
                            .addComponent(txtCity, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(26, 26, 26)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(lblCommunity)
                            .addComponent(txtCommunity, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(23, 23, 23)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(lblHouse)
                            .addComponent(txtHouse, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(lblName)
                            .addComponent(txtPerson, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(26, 26, 26)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(txtID, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(lblID))
                        .addGap(23, 23, 23)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(lblGender)
                            .addComponent(txtGender, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(18, 18, 18)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(lblAge)
                            .addComponent(txtAge, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))))
                .addGap(94, 94, 94)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(btnHistory)
                    .addComponent(btnAdd)
                    .addComponent(btnAdd1))
                .addContainerGap(158, Short.MAX_VALUE))
        );
    }// </editor-fold>//GEN-END:initComponents

    private void txtIDActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtIDActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_txtIDActionPerformed

    private void btnAdd1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnAdd1ActionPerformed
        // 判断病人是否存在
        List<Patient> patientList=AppData.getPatientList();
        for(Patient item:patientList){
            if(item.getID().equals(txtID.getText())){
             JOptionPane.showMessageDialog(null, "Sorry，Patient is already exists.", "ERROR", JOptionPane.ERROR_MESSAGE);   
            return;
            }
        }
        Patient p=new Patient();
        p.setCityName(txtCity.getSelectedItem().toString());
        p.setCommunityName(txtCommunity.getSelectedItem().toString());
        p.setHouseName(txtHouse.getSelectedItem().toString());
        p.setName(txtPerson.getSelectedItem().toString());
        p.setID(txtID.getText());
        p.setGender(txtGender.getText());
        p.setAge(Integer.valueOf(txtAge.getText()));
        
        AppData.addPatient(p);
        JOptionPane.showMessageDialog(null, "Add successfully", "successfully", JOptionPane.CLOSED_OPTION);
    }//GEN-LAST:event_btnAdd1ActionPerformed

    private void btnBackActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnBackActionPerformed
        //Back
         PatientCatalogJPanel ac=new PatientCatalogJPanel(userProcessContainer);
        userProcessContainer.add("PatientCatalogJPanel",ac);
        CardLayout layout = (CardLayout)userProcessContainer.getLayout();
        layout.next(userProcessContainer);
        
    }//GEN-LAST:event_btnBackActionPerformed

    
    //选择的城市发生变化
    private void txtCityItemStateChanged(java.awt.event.ItemEvent evt) {//GEN-FIRST:event_txtCityItemStateChanged
        List<String> communityStrs =initCommunity(txtCity.getSelectedItem().toString());
        List<String> houseStrs= initHouse(txtCity.getSelectedItem().toString(),communityStrs.get(0));
        List<String> personStrs= initPerson(txtCity.getSelectedItem().toString(),communityStrs.get(0),houseStrs.get(0));
        initPersonInfo(txtCity.getSelectedItem().toString(),
                txtCommunity.getSelectedItem().toString(),
                txtHouse.getSelectedItem().toString(),txtPerson.getSelectedItem().toString());
    }//GEN-LAST:event_txtCityItemStateChanged

    private void txtCommunityItemStateChanged(java.awt.event.ItemEvent evt) {//GEN-FIRST:event_txtCommunityItemStateChanged
        List<String> houseStrs= initHouse(txtCity.getSelectedItem().toString(),txtCommunity.getSelectedItem().toString());
        List<String> personStrs= initPerson(txtCity.getSelectedItem().toString(),txtCommunity.getSelectedItem().toString(),houseStrs.get(0));
        initPersonInfo(txtCity.getSelectedItem().toString(),
                txtCommunity.getSelectedItem().toString(),
                txtHouse.getSelectedItem().toString(),txtPerson.getSelectedItem().toString());
    }//GEN-LAST:event_txtCommunityItemStateChanged

    private void txtHouseItemStateChanged(java.awt.event.ItemEvent evt) {//GEN-FIRST:event_txtHouseItemStateChanged
         List<String> personStrs= initPerson(txtCity.getSelectedItem().toString(),
                 txtCommunity.getSelectedItem().toString(),
                 txtHouse.getSelectedItem().toString());
         initPersonInfo(txtCity.getSelectedItem().toString(),
                txtCommunity.getSelectedItem().toString(),
                txtHouse.getSelectedItem().toString(),txtPerson.getSelectedItem().toString());
    }//GEN-LAST:event_txtHouseItemStateChanged

    private void txtPersonItemStateChanged(java.awt.event.ItemEvent evt) {//GEN-FIRST:event_txtPersonItemStateChanged
        initPersonInfo(txtCity.getSelectedItem().toString(),
                txtCommunity.getSelectedItem().toString(),
                txtHouse.getSelectedItem().toString(),txtPerson.getSelectedItem().toString());
    }//GEN-LAST:event_txtPersonItemStateChanged

    private void btnAddActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnAddActionPerformed
        // 判断病人是否存在
        List<Patient> patientList=AppData.getPatientList();
        for(Patient item:patientList){
            if(item.getID().equals(txtID.getText())){
             //添加病例
                EncounterJPanel ac=new EncounterJPanel(userProcessContainer,txtCity.getSelectedItem().toString(),txtCommunity.getSelectedItem().toString(),txtHouse.getSelectedItem().toString(),txtPerson.getSelectedItem().toString());
                userProcessContainer.add("CreatePatientJPanel",ac);
                CardLayout layout = (CardLayout)userProcessContainer.getLayout();
                layout.next(userProcessContainer);
            return;
            }
        }
        JOptionPane.showMessageDialog(null, "Please Add Patient First.", "ERROR", JOptionPane.ERROR_MESSAGE);  

    }//GEN-LAST:event_btnAddActionPerformed

    private void btnHistoryActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnHistoryActionPerformed
        // 查询历史病例
           // 判断病人是否存在
        List<Patient> patientList=AppData.getPatientList();
        for(Patient item:patientList){
            if(item.getID().equals(txtID.getText())){
                EncounterHistoryJPanel ac=new EncounterHistoryJPanel(userProcessContainer,txtCity.getSelectedItem().toString(),txtCommunity.getSelectedItem().toString(),txtHouse.getSelectedItem().toString(),txtPerson.getSelectedItem().toString());
                userProcessContainer.add("EncounterHistoryJPanel",ac);
                CardLayout layout = (CardLayout)userProcessContainer.getLayout();
                layout.next(userProcessContainer);
            return;
            }
        }
        JOptionPane.showMessageDialog(null, "Please Add Patient First.", "ERROR", JOptionPane.ERROR_MESSAGE);  
    }//GEN-LAST:event_btnHistoryActionPerformed


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnAdd;
    private javax.swing.JButton btnAdd1;
    private javax.swing.JButton btnBack;
    private javax.swing.JButton btnHistory;
    private javax.swing.JLabel lblAge;
    private javax.swing.JLabel lblCity;
    private javax.swing.JLabel lblCommunity;
    private javax.swing.JLabel lblGender;
    private javax.swing.JLabel lblHouse;
    private javax.swing.JLabel lblID;
    private javax.swing.JLabel lblName;
    private javax.swing.JLabel lblTitle;
    private javax.swing.JTextField txtAge;
    private javax.swing.JComboBox<String> txtCity;
    private javax.swing.JComboBox<String> txtCommunity;
    private javax.swing.JTextField txtGender;
    private javax.swing.JComboBox<String> txtHouse;
    private javax.swing.JTextField txtID;
    private javax.swing.JComboBox<String> txtPerson;
    // End of variables declaration//GEN-END:variables
}
