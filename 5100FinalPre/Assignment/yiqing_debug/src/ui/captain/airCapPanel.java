/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package ui.captain;

import api.TravelSystem;
import api.employee.Employee;
import api.organization.*;
import api.property.*;
import api.property.Airplane;
import api.request.Flight;
import api.request.FlightTicket;
import api.request.request;
import api.request.Landing;
import api.userAccount.UserAccount;
import ui.Airport.*;
import ui.AirlineCompany.*;
import java.awt.CardLayout;
import java.text.SimpleDateFormat;
import java.util.Date;
import java.util.List;
import java.util.*;
import javax.swing.*;
import javax.swing.table.*;

/**
 *
 * @author wangqingtang
 */
public class airCapPanel extends javax.swing.JPanel {

    /**
     * Creates new form AirlineCompanyJPanel
     */
    JPanel container;
    private TravelSystem system;
    private Employee account;
    private AirlineCompany airLineCompany;
    //private List<request> ticketRequests = new ArrayList<>();
    public airCapPanel(JPanel container,Employee em,TravelSystem system, Organization o) {
        this.system = system;
        this.account = em;
        this.airLineCompany = (AirlineCompany) o;
        this.container = container;
        initComponents();
        populateTable();
    }
    
    private void populateTable() {
        
        DefaultTableModel model = (DefaultTableModel) workRequestJTable.getModel();
        int size = model.getRowCount();
        for (int i = 0; i < size; i++) {
            model.removeRow(0);
        }
        List<request> requests = airLineCompany.getRequestDirectory().getRequestList();
        SimpleDateFormat sdf = new SimpleDateFormat("MM-dd hh:mm");
        for (request request : requests) {
            if(request.getType().equals("Normal")|| request.getType().equals("VIP")){
            Flight flight = (Flight)request;
            if(flight.getCaptain().getName().equals(account.getName())){
            Object[] row = new Object[6];
            row[0] = flight;
            row[1] = flight.getId();
            row[2] = flight.getStartAirport();
            row[3] = flight.getEndAirport();
            row[4] = flight.getStartDate() == null ? "" :sdf.format( flight.getStartDate());
            row[5] = flight.getEndDate() == null ? "" :sdf.format( flight.getEndDate());
            model.addRow(row);
            }}
        }
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        lblTitle = new javax.swing.JLabel();
        jScrollPane1 = new javax.swing.JScrollPane();
        workRequestJTable = new javax.swing.JTable();
        jButton4 = new javax.swing.JButton();
        jButton1 = new javax.swing.JButton();
        jButton5 = new javax.swing.JButton();
        jButton6 = new javax.swing.JButton();
        jLabel1 = new javax.swing.JLabel();

        setBackground(new java.awt.Color(255, 255, 255));
        setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        lblTitle.setFont(new java.awt.Font("Gabriola", 1, 40)); // NOI18N
        lblTitle.setText("Airline Captain");
        add(lblTitle, new org.netbeans.lib.awtextra.AbsoluteConstraints(407, 15, -1, -1));

        workRequestJTable.setFont(new java.awt.Font("Gabriola", 0, 20)); // NOI18N
        workRequestJTable.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null}
            },
            new String [] {
                "", "Id", "StartAirport", "EndAirport", "StartDate", "EndDate"
            }
        ) {
            boolean[] canEdit = new boolean [] {
                false, true, true, true, true, true
            };

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        workRequestJTable.setRowHeight(30);
        jScrollPane1.setViewportView(workRequestJTable);
        if (workRequestJTable.getColumnModel().getColumnCount() > 0) {
            workRequestJTable.getColumnModel().getColumn(0).setMinWidth(0);
            workRequestJTable.getColumnModel().getColumn(0).setPreferredWidth(0);
            workRequestJTable.getColumnModel().getColumn(0).setMaxWidth(0);
        }

        add(jScrollPane1, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 200, 1001, 270));

        jButton4.setFont(new java.awt.Font("Gabriola", 0, 24)); // NOI18N
        jButton4.setText("Landing Request");
        jButton4.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton4ActionPerformed(evt);
            }
        });
        add(jButton4, new org.netbeans.lib.awtextra.AbsoluteConstraints(110, 510, 190, 42));

        jButton1.setIcon(new javax.swing.ImageIcon(getClass().getResource("/ui/captain/Backbutton_3.png"))); // NOI18N
        jButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton1ActionPerformed(evt);
            }
        });
        add(jButton1, new org.netbeans.lib.awtextra.AbsoluteConstraints(80, 20, 60, 60));

        jButton5.setFont(new java.awt.Font("Gabriola", 0, 24)); // NOI18N
        jButton5.setText("Landing Finish");
        jButton5.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton5ActionPerformed(evt);
            }
        });
        add(jButton5, new org.netbeans.lib.awtextra.AbsoluteConstraints(670, 510, 200, 42));

        jButton6.setFont(new java.awt.Font("Gabriola", 0, 24)); // NOI18N
        jButton6.setText("Take Off Request");
        jButton6.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton6ActionPerformed(evt);
            }
        });
        add(jButton6, new org.netbeans.lib.awtextra.AbsoluteConstraints(400, 510, 190, 42));

        jLabel1.setIcon(new javax.swing.ImageIcon(getClass().getResource("/ui/captain/aircap_副本.png"))); // NOI18N
        add(jLabel1, new org.netbeans.lib.awtextra.AbsoluteConstraints(660, 0, -1, 200));
    }// </editor-fold>//GEN-END:initComponents

    private void jButton4ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton4ActionPerformed
        // TODO add your handling code here:
        /*LandingPanel editflightInfoPanel = new LandingPanel(container);
        container.add("LandingPanel", editflightInfoPanel);
        CardLayout layout = (CardLayout) container.getLayout();
        layout.next(container);*/
        
        int row = workRequestJTable.getSelectedRow();
        if(row<0){
            JOptionPane.showMessageDialog(null, "Please select a row!!", "Warning", JOptionPane.WARNING_MESSAGE);
            return;
        }else{
            JOptionPane.showMessageDialog(null, " Request send success!!", "Success", JOptionPane.WARNING_MESSAGE);
        }
        Flight flight = (Flight) workRequestJTable.getValueAt(row, 0);
        String type = "";
        String status = "";
        Landing landing = new Landing(type, status, flight);
        system.getOrganizationByNameAndType("Airport", flight.getEndAirport()).
                getRequestDirectory().
                addRequest(landing);
    }//GEN-LAST:event_jButton4ActionPerformed

    private void jButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton1ActionPerformed
        // TODO add your handling code here:
        container.remove(this);
        CardLayout layout = (CardLayout) container.getLayout();
        layout.previous(container);
    }//GEN-LAST:event_jButton1ActionPerformed

    private void jButton5ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton5ActionPerformed
        // TODO add your handling code here:
        int row = workRequestJTable.getSelectedRow();
        if(row<0){
            JOptionPane.showMessageDialog(null, "Please select a row!!", "Warning", JOptionPane.WARNING_MESSAGE);
            return;
        }else{
            JOptionPane.showMessageDialog(null, "Landing success!!", "Success", JOptionPane.WARNING_MESSAGE);
        }
        Flight flight = (Flight) workRequestJTable.getValueAt(row, 0);
        List<request> requestList = system.getOrganizationByNameAndType("Airport", flight.getEndAirport()).
                getRequestDirectory()
                .getRequestList();
        for (request req: requestList){
            if (!(req instanceof Landing)){
                continue;
            }
            Landing landing = (Landing) req;
            if (landing.getFlight() == flight){
                landing.Finish();
                flight.setStatus("Finished");
            }
        }
        
        requestList = system.getOrganizationByIdAndType("AirlineCompany", flight.getOrganizationId()).
                getRequestDirectory()
                .getRequestList();
        if(flight.getType().equals("Normal")){
            for (request req: requestList){
                if (!(req instanceof FlightTicket)){
                    continue;
                }
                FlightTicket flightTicket = (FlightTicket) req;
                if (flightTicket.getFlightId() == flight.getId()){
                    flightTicket.setStatus("Finished");
                }
            }
        }
        
    }//GEN-LAST:event_jButton5ActionPerformed

    private void jButton6ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton6ActionPerformed
        // TODO add your handling code here:
        int row = workRequestJTable.getSelectedRow();
        if(row<0){
            JOptionPane.showMessageDialog(null, "Please select a row!!", "Warning", JOptionPane.WARNING_MESSAGE);
            return;
        }else{
            JOptionPane.showMessageDialog(null, " Request send success!!", "Success", JOptionPane.WARNING_MESSAGE);
        }
        Flight flight = (Flight) workRequestJTable.getValueAt(row, 0);
        List<request> requestList = system.getOrganizationByNameAndType("Airport", flight.getStartAirport()).
                getRequestDirectory()
                .getRequestList();
        for (request req: requestList){
            if (!(req instanceof Landing)){
                continue;
            }
            Landing landing = (Landing) req;
            if (landing.getFlight() == flight){
                flight.setStatus("Flying");
            }
        }
    }//GEN-LAST:event_jButton6ActionPerformed


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton jButton1;
    private javax.swing.JButton jButton4;
    private javax.swing.JButton jButton5;
    private javax.swing.JButton jButton6;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JLabel lblTitle;
    private javax.swing.JTable workRequestJTable;
    // End of variables declaration//GEN-END:variables
}
