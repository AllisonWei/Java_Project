/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JPanel.java to edit this template
 */
package ui.admin;

import api.TravelSystem;
import api.employee.Employee;
import api.enterprise.Enterprise;
import api.organization.Organization;
import api.userAccount.UserAccount;
import javax.swing.JFrame;
import javax.swing.JOptionPane;
import javax.swing.table.DefaultTableModel;

/**
 *
 * @author 10857
 */
public class AdminPanel extends javax.swing.JPanel {

    /**
     * Creates new form AdminPanel
     */
    private TravelSystem system;
    private Employee account;
    private Organization organization;
    public AdminPanel(UserAccount user,Employee e,TravelSystem system, Organization o) {
        initComponents();
        this.system = system;
        this.account = e;
        
        CbxEnter.removeAllItems();
        for(Enterprise en : this.system.getEnterpriseDirectory().getEnterpriseList()){
            CbxEnter.addItem(en.getName());
        }
        CbxOr.removeAllItems();
        for(Organization or : this.system.getEnterpriseDirectory().getEnterpriseList().get(0).getOrganizationDirectory().getOrganizationList()){
            CbxOr.addItem(or.getName());
        }
        CbxRole.removeAllItems();
        CbxRole.addItem("AirportControl");
        this.populate(this.system.getEnterpriseDirectory().getEnterpriseList().get(0).getOrganizationDirectory().getOrganizationList().get(0));
        this.organization = this.system.getEnterpriseDirectory().getEnterpriseList().get(0).getOrganizationDirectory().getOrganizationList().get(0);
    }
    
    
    
    public void populate(Organization o){
        DefaultTableModel model = (DefaultTableModel) SATable.getModel();
        int rowNumber = model.getRowCount();
        for(int i = 0; i < rowNumber;i++){
            model.removeRow(0);
        }
        if(CbxRole.getSelectedItem().toString().equals("Customer")||CbxRole.getSelectedItem().toString().equals("VIPCustomer")){
            for(UserAccount u : o.getUserAccountDirectory().getUserAccountList()){
                if(u.getRole().getRole().equals(CbxRole.getSelectedItem().toString())){
                    Object[] row = new Object[4];
                    row[0] = u.getUsername();
                    row[1] = u.getPassword();
                    row[2] = u.getRole().getRole();
                    row[3] = u.getStatus();
                    model.addRow(row);
                }
            }
        }else{
            for(Employee e : o.getEmployeeDirectory().getEmployeeList()){
                if(e.getRole().getRole().equals(CbxRole.getSelectedItem().toString())){
                    Object[] row = new Object[4];
                    row[0] = e.getEmployeeAccount();
                    row[1] = e.getEmployeePassword();
                    row[2] = e.getRole().getRole();
                    row[3] = e.getStatus();
                    model.addRow(row);
                }
            }
        }
    }
    
    public void Search(){
        for(Enterprise e : system.getEnterpriseDirectory().getEnterpriseList()){
            if(e.getName().equals(CbxEnter.getSelectedItem().toString())){
                for(Organization o : e.getOrganizationDirectory().getOrganizationList()){
                    if(o.getName().equals(CbxOr.getSelectedItem().toString())){
                        this.populate(o);
                        this.organization = o;
                    }
                }
            }
        }
    }
    
    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        CbxEnter = new javax.swing.JComboBox<>();
        jLabel1 = new javax.swing.JLabel();
        CbxOr = new javax.swing.JComboBox<>();
        jScrollPane1 = new javax.swing.JScrollPane();
        SATable = new javax.swing.JTable();
        SAbtnAdd = new javax.swing.JButton();
        CbxRole = new javax.swing.JComboBox<>();
        BtnDetail = new javax.swing.JButton();
        ChangeStatus = new javax.swing.JButton();
        refresh = new javax.swing.JButton();
        jLabel3 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();

        setBackground(new java.awt.Color(255, 255, 255));
        setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        CbxEnter.setFont(new java.awt.Font("Gabriola", 0, 24)); // NOI18N
        CbxEnter.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Item 1", "Item 2", "Item 3", "Item 4" }));
        CbxEnter.addItemListener(new java.awt.event.ItemListener() {
            public void itemStateChanged(java.awt.event.ItemEvent evt) {
                CbxEnterItemStateChanged(evt);
            }
        });
        CbxEnter.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                CbxEnterActionPerformed(evt);
            }
        });
        add(CbxEnter, new org.netbeans.lib.awtextra.AbsoluteConstraints(30, 130, 160, 30));

        jLabel1.setFont(new java.awt.Font("Gabriola", 1, 40)); // NOI18N
        jLabel1.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel1.setText("System Admin");
        add(jLabel1, new org.netbeans.lib.awtextra.AbsoluteConstraints(310, 40, 240, 50));

        CbxOr.setFont(new java.awt.Font("Gabriola", 0, 24)); // NOI18N
        CbxOr.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Item 1", "Item 2", "Item 3", "Item 4" }));
        CbxOr.addItemListener(new java.awt.event.ItemListener() {
            public void itemStateChanged(java.awt.event.ItemEvent evt) {
                CbxOrItemStateChanged(evt);
            }
        });
        add(CbxOr, new org.netbeans.lib.awtextra.AbsoluteConstraints(220, 130, 160, 30));

        SATable.setFont(new java.awt.Font("Gabriola", 0, 20)); // NOI18N
        SATable.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null}
            },
            new String [] {
                "UserName", "Password", "Type", "Status"
            }
        ));
        jScrollPane1.setViewportView(SATable);

        add(jScrollPane1, new org.netbeans.lib.awtextra.AbsoluteConstraints(30, 180, 752, 303));

        SAbtnAdd.setFont(new java.awt.Font("Gabriola", 0, 24)); // NOI18N
        SAbtnAdd.setText("Add");
        SAbtnAdd.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                SAbtnAddActionPerformed(evt);
            }
        });
        add(SAbtnAdd, new org.netbeans.lib.awtextra.AbsoluteConstraints(710, 500, 80, -1));

        CbxRole.setFont(new java.awt.Font("Gabriola", 0, 24)); // NOI18N
        CbxRole.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Item 1", "Item 2", "Item 3", "Item 4" }));
        CbxRole.addItemListener(new java.awt.event.ItemListener() {
            public void itemStateChanged(java.awt.event.ItemEvent evt) {
                CbxRoleItemStateChanged(evt);
            }
        });
        add(CbxRole, new org.netbeans.lib.awtextra.AbsoluteConstraints(410, 130, 170, 30));

        BtnDetail.setFont(new java.awt.Font("Gabriola", 0, 24)); // NOI18N
        BtnDetail.setText("Detail");
        BtnDetail.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                BtnDetailActionPerformed(evt);
            }
        });
        add(BtnDetail, new org.netbeans.lib.awtextra.AbsoluteConstraints(600, 500, 90, -1));

        ChangeStatus.setFont(new java.awt.Font("Gabriola", 0, 24)); // NOI18N
        ChangeStatus.setText("Change Status");
        ChangeStatus.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                ChangeStatusActionPerformed(evt);
            }
        });
        add(ChangeStatus, new org.netbeans.lib.awtextra.AbsoluteConstraints(400, 500, -1, -1));

        refresh.setFont(new java.awt.Font("Gabriola", 0, 24)); // NOI18N
        refresh.setText("refresh");
        refresh.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                refreshActionPerformed(evt);
            }
        });
        add(refresh, new org.netbeans.lib.awtextra.AbsoluteConstraints(690, 130, -1, 40));

        jLabel3.setIcon(new javax.swing.ImageIcon(getClass().getResource("/ui/admin/admin3_副本.png"))); // NOI18N
        add(jLabel3, new org.netbeans.lib.awtextra.AbsoluteConstraints(780, 270, 280, 370));

        jLabel2.setIcon(new javax.swing.ImageIcon(getClass().getResource("/ui/admin/pen_副本.png"))); // NOI18N
        jLabel2.setText("jLabel2");
        add(jLabel2, new org.netbeans.lib.awtextra.AbsoluteConstraints(210, 30, 100, 60));
    }// </editor-fold>//GEN-END:initComponents

    private void CbxEnterItemStateChanged(java.awt.event.ItemEvent evt) {//GEN-FIRST:event_CbxEnterItemStateChanged
        // TODO add your handling code here:
        if(CbxEnter.getSelectedItem() != null){
            CbxOr.removeAllItems();
            CbxRole.removeAllItems();
            if(CbxEnter.getSelectedItem().equals("Airport")){
                for(Organization o : system.getEnterpriseDirectory().getEnterpriseList().get(0).getOrganizationDirectory().getOrganizationList()){
                    CbxOr.addItem(o.getName());
                }
                CbxRole.addItem("AirportControl");
            }
            else if(CbxEnter.getSelectedItem().equals("Station")){
                for(Organization o : system.getEnterpriseDirectory().getEnterpriseList().get(1).getOrganizationDirectory().getOrganizationList()){
                    CbxOr.addItem(o.getName());
                }
                CbxRole.addItem("StationControl");
            }
            else if(CbxEnter.getSelectedItem().equals("AirlineCompany")){
                for(Organization o : system.getEnterpriseDirectory().getEnterpriseList().get(2).getOrganizationDirectory().getOrganizationList()){
                    CbxOr.addItem(o.getName());
                }
                CbxRole.addItem("Customer");
                CbxRole.addItem("VIPCustomer");
                CbxRole.addItem("AirCaptain");
                CbxRole.addItem("CustomerService");
                CbxRole.addItem("VIPCustomerService");
                CbxRole.addItem("AirlineComManager");
            }
            else if(CbxEnter.getSelectedItem().equals("RailwayCompany")){
                for(Organization o : system.getEnterpriseDirectory().getEnterpriseList().get(3).getOrganizationDirectory().getOrganizationList()){
                    CbxOr.addItem(o.getName());
                }
                CbxRole.addItem("Customer");
                CbxRole.addItem("VIPCustomer");
                CbxRole.addItem("TrainCaptain");
                CbxRole.addItem("CustomerService");
                CbxRole.addItem("VIPCustomerService");
                CbxRole.addItem("RailwayCompanyManager");
            }
            this.Search();
        }
    }//GEN-LAST:event_CbxEnterItemStateChanged

    private void CbxOrItemStateChanged(java.awt.event.ItemEvent evt) {//GEN-FIRST:event_CbxOrItemStateChanged
        // TODO add your handling code here:
        if(CbxOr.getSelectedItem() != null && CbxRole.getSelectedItem() != null){
            this.Search();
        }
    }//GEN-LAST:event_CbxOrItemStateChanged

    private void CbxRoleItemStateChanged(java.awt.event.ItemEvent evt) {//GEN-FIRST:event_CbxRoleItemStateChanged
        // TODO add your handling code here:
        if(CbxOr.getSelectedItem() != null && CbxRole.getSelectedItem() != null){
            this.Search();
        }
    }//GEN-LAST:event_CbxRoleItemStateChanged

    private void SAbtnAddActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_SAbtnAddActionPerformed
        // TODO add your handling code here:
        SysAccount sysAccount = new SysAccount(this.organization, 0, "", CbxEnter.getSelectedItem().toString(), CbxOr.getSelectedItem().toString(), CbxRole.getSelectedItem().toString(), "");
        sysAccount.setVisible(true);
    }//GEN-LAST:event_SAbtnAddActionPerformed

    private void BtnDetailActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_BtnDetailActionPerformed
        // TODO add your handling code here:
        if(SATable.getSelectedRow() == -1){
            JOptionPane.showMessageDialog(this,"please select a row");
        }
        else{
            int row = SATable.getSelectedRow();
            SysAccount sysAccount = new SysAccount(this.organization, 1, SATable.getValueAt(row, 0).toString(), CbxEnter.getSelectedItem().toString(), CbxOr.getSelectedItem().toString(), SATable.getValueAt(row, 2).toString(), SATable.getValueAt(row, 3).toString());
            sysAccount.setVisible(true);
        }
    }//GEN-LAST:event_BtnDetailActionPerformed

    private void ChangeStatusActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_ChangeStatusActionPerformed
        if(SATable.getSelectedRow() == -1){
            JOptionPane.showMessageDialog(this,"please select a row");
        }
        else{
            int row = SATable.getSelectedRow();
            if(CbxRole.getSelectedItem().toString().endsWith("Customer")){
                for(UserAccount u : this.organization.getUserAccountDirectory().getUserAccountList()){
                    if(u.getUsername().equals(SATable.getValueAt(row, 0))){
                        if(u.getStatus().equals("Activated")){
                            u.setStatus("Deleted");
                        }
                        else{
                            u.setStatus("Activated");
                        }
                    }
                }
            }
            else{
                for(Employee e : this.organization.getEmployeeDirectory().getEmployeeList()){
                    if(e.getEmployeeAccount().equals(SATable.getValueAt(row, 0))){
                        if(e.getStatus().equals("Activated")){
                            e.setStatus("Deleted");
                        }
                        else{
                            e.setStatus("Activated");
                        }
                    }
                }
            }
        }
        this.Search();
    }//GEN-LAST:event_ChangeStatusActionPerformed

    private void refreshActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_refreshActionPerformed
        // TODO add your handling code here:
        this.Search();
    }//GEN-LAST:event_refreshActionPerformed

    private void CbxEnterActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_CbxEnterActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_CbxEnterActionPerformed


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton BtnDetail;
    private javax.swing.JComboBox<String> CbxEnter;
    private javax.swing.JComboBox<String> CbxOr;
    private javax.swing.JComboBox<String> CbxRole;
    private javax.swing.JButton ChangeStatus;
    private javax.swing.JTable SATable;
    private javax.swing.JButton SAbtnAdd;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JButton refresh;
    // End of variables declaration//GEN-END:variables
}
