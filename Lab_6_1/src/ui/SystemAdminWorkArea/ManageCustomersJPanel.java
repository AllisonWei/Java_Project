/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package ui.SystemAdminWorkArea;

import java.awt.CardLayout;
import java.util.List;

import javax.swing.JOptionPane;
import javax.swing.JPanel;
import javax.swing.event.ListSelectionEvent;
import javax.swing.event.ListSelectionListener;
import javax.swing.table.DefaultTableModel;
import javax.swing.table.TableColumn;

import business.DB4OUtil.UserDBUtil;
import business.dto.OrganizationDto;
import business.dto.PersonDto;
import business.dto.RoleDto;
import business.dto.UserDto;
import business.exception.CommonException;
import business.type.OrganizationType;
import business.type.RoleType;

/**
 *
 * @author Lynn Wei
 */
public class ManageCustomersJPanel extends javax.swing.JPanel {

    /**
     * Creates new form ManageEmployee
     */
    JPanel userProcessContainer;
    UserDto business;
    
    UserDto selectedUserDto;
    int rowIndex = -1;
    
    public ManageCustomersJPanel(JPanel userProcessContainer, UserDto business) {
        initComponents();
        this.userProcessContainer = userProcessContainer;
        this.business = business;   
    }
    
    public void initCustomerTable(UserDto userDto) {
        DefaultTableModel model = (DefaultTableModel) tblCustomers.getModel();
        Object[] row = new Object[4];
        row[0] = userDto.getPerson().getPersonName();
        row[1] = userDto.getUserName();
        row[2] = userDto.getRole().getRoleName();
        row[3] = userDto.getId();
        model.addRow(row);
    }


    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        lblUsersList = new javax.swing.JLabel();
        jScrollPane1 = new javax.swing.JScrollPane();
        tblCustomers = new javax.swing.JTable();
        btnBack = new javax.swing.JButton();
        lblTitle1 = new javax.swing.JLabel();
        btnUpdate = new javax.swing.JButton();
        btnAdd = new javax.swing.JButton();
        lblCreateUser = new javax.swing.JLabel();
        btnDelete = new javax.swing.JButton();
        lblOrganization = new javax.swing.JLabel();
        txtOrganization = new javax.swing.JTextField();
        txtOrganization.setText(OrganizationType.Customer.getValue());
        lblRole = new javax.swing.JLabel();
        txtRole = new javax.swing.JTextField();
        txtRole.setText(RoleType.Customer.getValue());
        lblPerson = new javax.swing.JLabel();
        txtPerson = new javax.swing.JTextField();
        txtUserName = new javax.swing.JTextField();
        lblUserName = new javax.swing.JLabel();
        lblPassword = new javax.swing.JLabel();
        txtPassword = new javax.swing.JTextField();

        lblUsersList.setFont(new java.awt.Font("Tahoma", 1, 11)); // NOI18N
        lblUsersList.setText("Customers List:");

        List<UserDto> userList = 
            UserDBUtil.queryByOrg(OrganizationType.Customer.getValue());
        Object[][] dataList = new Object[userList.size()][4];
        for (int i = 0; i < dataList.length; i++) {
            dataList[i][0] = userList.get(i).getPerson().getPersonName();
            dataList[i][1] = userList.get(i).getUserName();
            dataList[i][2] = userList.get(i).getRole().getRoleName();
            dataList[i][3] = userList.get(i).getId();
        }
        tblCustomers.setModel(new javax.swing.table.DefaultTableModel(
            dataList,
            new String [] {
                "Person", "User Name", "Role", ""
            }
        ) {
            Class[] types = new Class [] {
                java.lang.String.class, java.lang.String.class, java.lang.Object.class, java.lang.String.class
            };
            boolean[] canEdit = new boolean [] {
                true, false, true, false
            };

            public Class getColumnClass(int columnIndex) {
                return types [columnIndex];
            }

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        jScrollPane1.setViewportView(tblCustomers);
        tblCustomers.getSelectionModel().addListSelectionListener(new ListSelectionListener() {
            @Override
            public void valueChanged(ListSelectionEvent arg0) {
                if (!arg0.getValueIsAdjusting()) {
                    return;
                }
                int i = tblCustomers.getSelectedRow();
                if (i < 0) {
                    return;
                }
                String id = (String)tblCustomers.getValueAt(i, 3);
                UserDto userDto = UserDBUtil.queryById(id);
                txtOrganization.setText(userDto.getOrganization().getOrgnaizationName());
                txtRole.setText(userDto.getRole().getRoleName());
                txtPerson.setText(userDto.getPerson().getPersonName());
                txtUserName.setText(userDto.getUserName());
                txtPassword.setText(userDto.getPassword());
                selectedUserDto = userDto;
                rowIndex = i;
            }
        });
        TableColumn tc = tblCustomers.getTableHeader().getColumnModel().getColumn(3);
        tc.setMaxWidth(0);
        tc.setWidth(0);
        tc.setMinWidth(0);
        btnBack.setText("<< Back");
        btnBack.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnBackActionPerformed(evt);
            }
        });

        lblTitle1.setFont(new java.awt.Font("Tahoma", 1, 24)); // NOI18N
        lblTitle1.setText("Manage Customers");

        lblRole.setText("Role:");

        btnUpdate.setText("Update");
        btnUpdate.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnUpdateActionPerformed(evt);
            }
        });

        btnAdd.setText("Add");
        btnAdd.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnAddActionPerformed(evt);
            }
        });

        lblCreateUser.setFont(new java.awt.Font("Tahoma", 1, 11)); // NOI18N
        lblCreateUser.setText("Customers Info:");

        btnDelete.setText("Delete");
        btnDelete.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnDeleteActionPerformed(evt);
            }
        });

        lblUserName.setText("User Name:");

        lblPassword.setText("Password:");

        lblOrganization.setText("Organization:");

        lblPerson.setText("Person:");

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(6, 6, 6)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(lblUsersList)
                                .addGap(0, 0, Short.MAX_VALUE))
                            .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 404, Short.MAX_VALUE))
                        .addGap(18, 18, 18)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(lblCreateUser)
                                .addGap(310, 310, 310))
                            .addGroup(layout.createSequentialGroup()
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addGroup(layout.createSequentialGroup()
                                        .addComponent(btnAdd, javax.swing.GroupLayout.PREFERRED_SIZE, 96, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addGap(53, 53, 53)
                                        .addComponent(btnUpdate, javax.swing.GroupLayout.PREFERRED_SIZE, 96, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                        .addComponent(btnDelete, javax.swing.GroupLayout.PREFERRED_SIZE, 96, javax.swing.GroupLayout.PREFERRED_SIZE))
                                    .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                                        .addGroup(layout.createSequentialGroup()
                                            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                                                .addComponent(lblUserName)
                                                .addComponent(lblRole)
                                                .addComponent(lblPassword))
                                            .addGap(18, 18, 18)
                                            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                                .addComponent(txtUserName, javax.swing.GroupLayout.PREFERRED_SIZE, 146, javax.swing.GroupLayout.PREFERRED_SIZE)
                                                .addComponent(txtPassword, javax.swing.GroupLayout.PREFERRED_SIZE, 146, javax.swing.GroupLayout.PREFERRED_SIZE)
                                                .addComponent(txtRole, javax.swing.GroupLayout.PREFERRED_SIZE, 146, javax.swing.GroupLayout.PREFERRED_SIZE)))
                                        .addGroup(layout.createSequentialGroup()
                                            .addComponent(lblOrganization)
                                            .addGap(18, 18, 18)
                                            .addComponent(txtOrganization, javax.swing.GroupLayout.PREFERRED_SIZE, 146, javax.swing.GroupLayout.PREFERRED_SIZE))
                                        .addGroup(layout.createSequentialGroup()
                                            .addComponent(lblPerson)
                                            .addGap(18, 18, 18)
                                            .addComponent(txtPerson, javax.swing.GroupLayout.PREFERRED_SIZE, 146, javax.swing.GroupLayout.PREFERRED_SIZE))))
                                .addContainerGap())))
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(btnBack)
                        .addGap(206, 206, 206)
                        .addComponent(lblTitle1, javax.swing.GroupLayout.PREFERRED_SIZE, 231, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addContainerGap())))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(30, 30, 30)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(btnBack)
                        .addGap(24, 24, 24))
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(lblTitle1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)))
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(lblUsersList)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 346, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(lblCreateUser)
                        .addGap(26, 26, 26)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(lblOrganization)
                            .addComponent(txtOrganization, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(26, 26, 26)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(lblRole)
                            .addComponent(txtRole, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(29, 29, 29)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(lblPerson)
                            .addComponent(txtPerson, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(29, 29, 29)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(lblUserName)
                            .addComponent(txtUserName, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(30, 30, 30)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(lblPassword)
                            .addComponent(txtPassword, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(45, 45, 45)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(btnAdd)
                            .addComponent(btnUpdate)
                            .addComponent(btnDelete))))
                .addContainerGap(42, Short.MAX_VALUE))
        );
    }// </editor-fold>//GEN-END:initComponents

    private void btnBackActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnBackActionPerformed
        // TODO add your handling code here:
        SystemAdminWorkAreaJPanel sawajp = new SystemAdminWorkAreaJPanel(userProcessContainer, business);
        userProcessContainer.add("SystemAdminWorkAreaJPanel", sawajp);
        CardLayout layout = (CardLayout) userProcessContainer.getLayout();
        layout.next(userProcessContainer);

    }//GEN-LAST:event_btnBackActionPerformed

    private void btnUpdateActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnUpdateActionPerformed
        // Add your handling code here:
        String orgnaizationName = txtOrganization.getText();
        String roleName = txtRole.getText();
        String person = txtPerson.getText();
        String userName = txtUserName.getText();
        String password = txtPassword.getText();
        if (person.isEmpty() || userName.isEmpty() || password.isEmpty() || rowIndex < 0 || null == selectedUserDto) {
            return;
        }
        selectedUserDto.setUserName(userName);
        selectedUserDto.setPassword(password);
        selectedUserDto.getPerson().setPersonName(person);
        selectedUserDto.getRole().setRoleName(roleName);
        selectedUserDto.getOrganization().setOrgnaizationName(orgnaizationName);
        try {
            UserDBUtil.update(selectedUserDto);
        } catch (CommonException e) {
            JOptionPane.showMessageDialog(null, e.getMessage());
            return;
        }
        tblCustomers.getModel().setValueAt(selectedUserDto.getPerson().getPersonName(), rowIndex, 0);
        tblCustomers.getModel().setValueAt(selectedUserDto.getUserName(), rowIndex, 1);
        tblCustomers.getModel().setValueAt(selectedUserDto.getRole().getRoleName(), rowIndex, 2);
        JOptionPane.showMessageDialog(null, "Customer updated successfully.");
        txtUserName.setText("");
        txtPassword.setText("");
        txtPerson.setText("");
        selectedUserDto = null;
        rowIndex = -1;
    }//GEN-LAST:event_btnUpdateActionPerformed

    private void btnAddActionPerformed(java.awt.event.ActionEvent evt) {// GEN-FIRST:event_btnAddActionPerformed
        String orgnaizationName = txtOrganization.getText();
        String roleName = txtRole.getText();
        String person = txtPerson.getText();
        String userName = txtUserName.getText();
        String password = txtPassword.getText();
        if (person.isEmpty() || userName.isEmpty() || password.isEmpty()) {
            return;
        }
        UserDto userDto = new UserDto(userName, password, new RoleDto(roleName), 
            new OrganizationDto(orgnaizationName), new PersonDto(person));
        try {
            UserDBUtil.save(userDto);
        } catch (CommonException e) {
            JOptionPane.showMessageDialog(null, e.getMessage());
            return;
        }
        initCustomerTable(userDto);

        JOptionPane.showMessageDialog(null, "Customer added successfully.");
        txtUserName.setText("");
        txtPassword.setText("");
        txtPerson.setText("");
        selectedUserDto = null;
        rowIndex = -1;
    }// GEN-LAST:event_btnAddActionPerformed

    private void btnDeleteActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnDeleteActionPerformed
        // add your handling code here:
        DefaultTableModel model = (DefaultTableModel) tblCustomers.getModel();
        UserDto userDto = UserDBUtil.queryById(selectedUserDto.getId());
        UserDBUtil.remove(userDto);
        model.removeRow(rowIndex);
        txtUserName.setText("");
        txtPassword.setText("");
        txtPerson.setText("");
        selectedUserDto = null;
        rowIndex = -1;
    }//GEN-LAST:event_btnDeleteActionPerformed
    
     
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnAdd;
    private javax.swing.JButton btnBack;
    private javax.swing.JButton btnDelete;
    private javax.swing.JButton btnUpdate;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JLabel lblCreateUser;
    private javax.swing.JLabel lblOrganization;
    private javax.swing.JLabel lblPassword;
    private javax.swing.JLabel lblPerson;
    private javax.swing.JLabel lblRole;
    private javax.swing.JLabel lblTitle1;
    private javax.swing.JLabel lblUserName;
    private javax.swing.JLabel lblUsersList;
    private javax.swing.JTable tblCustomers;
    private javax.swing.JTextField txtOrganization;
    private javax.swing.JTextField txtPassword;
    private javax.swing.JTextField txtPerson;
    private javax.swing.JTextField txtRole;
    private javax.swing.JTextField txtUserName;
    // End of variables declaration//GEN-END:variables
}
